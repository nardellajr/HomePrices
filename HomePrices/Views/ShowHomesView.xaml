<UserControl x:Class="Dashboard.Views.ShowHomesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Dashboard.ViewModels" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DataContext="{d:DesignInstance Type=local:ShowHomesViewModel, IsDesignTimeCreatable=False}"
             mc:Ignorable="d" 
             d:DesignHeight="450"
             d:DesignWidth="800"
             Loaded="UserControl_Loaded">
    <Grid>
        <DataGrid IsReadOnly="True" ItemsSource="{Binding Homes}" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Address" Binding="{Binding Address}">
                    <DataGridTextColumn.ElementStyle>
                        <Style BasedOn="{StaticResource {x:Type TextBlock}}"  TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="City" Binding="{Binding City}">
                    <DataGridTextColumn.ElementStyle>
                        <Style BasedOn="{StaticResource {x:Type TextBlock}}"  TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="State" Binding="{Binding State}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style BasedOn="{StaticResource {x:Type TextBlock}}"  TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Price" Binding="{Binding Price}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style BasedOn="{StaticResource {x:Type TextBlock}}"  TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn CanUserSort="False">
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="materialDesign:DataGridAssist.CellPadding" Value="0" />
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type local:HomeItemViewModel}">
                            <Button Content="Mark Returned" Command="{Binding ReturnedCommand}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Button
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Command="{Binding RefreshCommand}"
            Style="{StaticResource MaterialDesignPaperLightButton}">
            <!-- All of this to make the arrow inside of the button spin, while loading -->
            <Button.Content>
                <materialDesign:PackIcon Kind="Refresh" RenderTransformOrigin="0.5,0.5">
                    <materialDesign:PackIcon.RenderTransform>
                        <RotateTransform x:Name="RefreshRotateTransform"/>
                    </materialDesign:PackIcon.RenderTransform>
                    <materialDesign:PackIcon.Style>
                        <Style BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}" TargetType="materialDesign:PackIcon">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RefreshCommand.IsRunning}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Name="StartSpin">
                                            <BeginStoryboard.Storyboard>
                                                <Storyboard RepeatBehavior="Forever">
                                                    <DoubleAnimation
                                                        Storyboard.TargetProperty="RenderTransform.Angle"
                                                        From="0"
                                                        To="360" />
                                                </Storyboard>
                                            </BeginStoryboard.Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="StartSpin" />
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </materialDesign:PackIcon.Style>
                </materialDesign:PackIcon>
            </Button.Content>
        </Button>
           

        <ProgressBar   
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            IsIndeterminate="True"                       
            Style="{StaticResource MaterialDesignCircularProgressBar}"
            Visibility="{Binding RefreshCommand.IsRunning, Converter={StaticResource BooleanToVisibilityConverter}}"
            Value="0" />
    </Grid>
</UserControl>
